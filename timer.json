{
	"inputtext" : ["<NAME>", "<RESET>", "<CLOCK>", "<OUTPUT>", "<FREQ_HZ>", "<PERIOD_MS>"],
	"selects" : 
	[
    		{ "name" : "<EDGE_TYPE>", "options" : [ "rising_edge", "falling_edge"] },
        	{ "name" : "<RESET_TYPE>", "options" : [ "Synchronous", "Asynchronous"] }
	],
	"moduleName" : "Timer",
	
	"moduleCode" : "library IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity <NAME> is\n\nPort\n(\n\t<CLOCK> : in STD_LOGIC;\n\t<RESET>: in STD_LOGIC;\n\t<OUTPUT> : out STD_LOGIC\n);\n\n\nend <NAME>;\n\narchitecture Behavioral of <NAME> is\n\nsignal cont : integer range 0 to <FREQ_HZ>*<PERIOD_MS>\/1000 := 0;\n\nbegin\n\tprocess(<CLOCK>)\n\t\tbegin\n\t\tif <EDGE_TYPE>(<CLOCK>) then\n\t\t\n\t\t\tif <RESET> = '1' then\n\t\t\t\tcont <= 0;\n\t\t\t\telse\n\t\t\t\t\tif cont = (((<FREQ_HZ>\/1000)*<PERIOD_MS>)-1) then\n\t\t\t\t\t\tcont \t <= 0;\n\t\t\t\t\t\t<OUTPUT> <= '1';\n\t\t\t\t\telse\n\t\t\t\t\t\tcont <= cont + 1;\n\t\t\t\t\t\t<OUTPUT> <= '0';\n\t\t\t\t\t\tend if;\n\t\t\t\tend if;\n\t\tend if;\n\tend process;\n\n\nend Behavioral;",
	"moduleCode2" : "library IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity <NAME> is\n\nPort\n(\n\t<CLOCK>: in STD_LOGIC;\n\t<RESET>: in STD_LOGIC;\n\t<OUTPUT> : out STD_LOGIC\n);\n\n\nend <NAME>;\n\narchitecture Behavioral of <NAME> is\n\nsignal cont : integer range 0 to <FREQ_HZ>*<PERIOD_MS>\/1000 := 0;\n\nbegin\n\n\tprocess(<CLOCK>,<RESET>)\n\tbegin\n\t\tif <RESET> = '1' then\n\t\t\t\tcont <= 0;\n\t\t\t\telse\n\t\t\tif <EDGE_TYPE>(<CLOCK>) then\t\n\t\t\t\tif cont = (((<FREQ_HZ>\/1000)*<PERIOD_MS>)-1) then\n\t\t\t\t\t\tcont \t <= 0;\n\t\t\t\t\t\t<OUTPUT> <= '1';\n\t\t\t\t\telse\n\t\t\t\t\t\tcont <= cont + 1;\n\t\t\t\t\t\t<OUTPUT> <= '0';\n\t\t\t\tend if;\n\t\t\tend if;\n\t\tend if;\n\tend process;\n\n\nend Behavioral;\n\n"
}
